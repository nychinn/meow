var ground = [
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
	[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32]
];

var layer1 = [
	[30, 31, 20, 21, 20, 21, 20, 21, 20, 21, 20, 21, 20, 21, 20, 21, 20, 21, 	30, 31],
	[22, 23, 28, 29, 28, 29, 28, 29, 28, 29, 28, 29, 28, 29, 28, 29, 28, 29, 	22, 23],
	[30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	30, 31],
	[22, 23, -1, -1, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 		-1, -1, 22, 23],
	[30, 31, -1, -1, 12, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 30, 31],
	[22, 23, -1, -1, 20, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 22, 23],
	[30, 31, -1, -1, 28, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 30, 31],
	[22, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 22, 23],
	[30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 30, 31],
	[22, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 22, 23],
	[30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 30, 31],
	[22, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	-1, -1, 22, 23],
	[30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 	30, 31],
	[22, 23, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 	22, 23],
	[30, 31, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 	30, 31]
];


var tilesetImage = new Image();
tilesetImage.src = 'images/tileset-citrine.png';
tilesetImage.onload = function() {
	drawImage();
};

var canvas = document.getElementById('main');
var ctx = canvas.getContext('2d');
ctx.imageSmoothingEnabled = false;

var tileSize = 16;
var rowTileCount = 15;
var colTileCount = 20;
var imageNumTiles = 8;
var destTileSize = 32;

function draw(ctx, image, tileCol, tileRow, tileSize, c, r, destTileSize) {
	ctx.drawImage(image, 
		(tileCol * tileSize), 
		(tileRow * tileSize), 
		tileSize, 
		tileSize, 
		(c * destTileSize), 
		(r * destTileSize), 
		destTileSize, 
		destTileSize);
};

function drawTile(r, c) {
	var tile = ground[ r ][ c ];
	var tileRow = (tile / imageNumTiles) | 0; // Bitwise OR operation
	var tileCol = (tile % imageNumTiles) | 0;
	draw(ctx, tilesetImage, tileCol, tileRow, tileSize, c, r, destTileSize);

	tile = layer1[ r ][ c ];
	if(tile !== -1) {
		var tileRow = (tile / imageNumTiles) | 0; // Bitwise OR operation
		var tileCol = (tile % imageNumTiles) | 0;
		draw(ctx, tilesetImage, tileCol, tileRow, tileSize, c, r, destTileSize);
	}
};

function drawImage () {
   for (var r = 0; r < rowTileCount; r++) {
      for (var c = 0; c < colTileCount; c++) {
       	drawTile(r, c);
      }
   }
}